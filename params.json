{"name":"Event stream","tagline":"event_stream makes it easier to expose custom events in Dart.","body":"event_stream\r\n============\r\n\r\n[![](https://drone.io/github.com/ejsmith/event_stream/status.png)](https://drone.io/github.com/ejsmith/event_stream/latest)\r\n\r\n## Introduction ##\r\n\r\nMakes it easier to expose custom events in Dart using the Stream API.\r\n\r\n## Getting Started ##\r\n\r\n1\\. Add the following to your project's **pubspec.yaml** and run\r\n```pub install```.\r\n\r\n```yaml\r\ndependencies:\r\n  event_stream: any\r\n```\r\n\r\n2\\. Add the correct import for your project.\r\n\r\n```dart\r\nimport 'package:event_stream/event_stream.dart';\r\n```\r\n\r\n## Example ##\r\n\r\n```dart\r\nimport 'package:event_stream/event_stream.dart';\r\n\r\nimport 'dart:async';\r\n\r\nclass ClassWithEvents implements NotifyPropertyChanged {\r\n  String _someProperty;\r\n  \r\n  final EventStream<PropertyChangedEventArgs> _onPropertyChangedEvent = new EventStream<PropertyChangedEventArgs>();\r\n  Stream<PropertyChangedEventArgs> get onPropertyChanged => _onPropertyChangedEvent.stream;\r\n  \r\n  final EventStream _onClosedEvent = new EventStream();\r\n  Stream get onClosed => _onClosedEvent.stream;\r\n  \r\n  String get someProperty => _someProperty;\r\n  set someProperty(String value) {\r\n    _someProperty = value;\r\n    _onPropertyChangedEvent.signal(new PropertyChangedEventArgs('someProperty', value));\r\n  }\r\n  \r\n  close() {\r\n    _onClosedEvent.signal();\r\n  }\r\n}\r\n\r\nmain() {\r\n  var c = new ClassWithEvents();\r\n  c.onPropertyChanged.listen((PropertyChangedEventArgs<String> args) => print('changed: name=${args.propertyName} value=${args.value}'));\r\n  c.onClosed.listen((_) => print('closed'));\r\n  c.someProperty = \"test\";\r\n  c.close();\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}